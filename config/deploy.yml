service: sfbuff
image: alanoliveira89/sfbuff

servers:
  web:
    hosts:
     - sfbuff.site
  job:
    hosts:
     - sfbuff.site
    cmd: bin/jobs

proxy:
  app_port: 3000
  ssl: true
  hosts:
    - sfbuff.site
    - www.sfbuff.site

registry:
  username: alanoliveira89
  password:
    - KAMAL_REGISTRY_PASSWORD

builder:
  arch: amd64
  local: false
  remote: sfbuff.site
  args:
    GIT_REVISION: <%= `git rev-parse HEAD`.chomp %>

env:
  clear:
    SFBUFF_DATABASE_HOST: sfbuff-db
    SFBUFF_DATABASE_USERNAME: sfbuff
    RAILS_ENV: production
    REPOSITORY_URL: <%= ENV.fetch("REPOSITORY_URL", "") %>
    REDIS_URL: redis://sfbuff-redis:6379
    SOLID_QUEUE_POLLING_INTERVAL: 0.5
    PERFORM_FRAGMENT_CACHING: false
  secret:
    - SECRET_KEY_BASE
    - BUCKLER_EMAIL
    - BUCKLER_PASSWORD
    - BUCKLER_USER_AGENT
    - SFBUFF_DATABASE_PASSWORD
    - SENTRY_DSN

ssh:
  user: <%= ENV.fetch("SFBUFF_DEPLOY_USER") %>

aliases:
  shell: app exec --interactive --reuse "bash"
  console: app exec --interactive --reuse "bin/rails console"
  logs: app logs -f

# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "sfbuff_storage:/rails/storage"

accessories:
  db:
    image: postgres:16.2-alpine
    host: sfbuff.site
    port: "127.0.0.1:5432:5432"
    env:
      clear:
        POSTGRES_USER: sfbuff
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
    options:
      memory: 384m
      memory-swap: 384m
    cmd: >
      postgres \
       -c shared_buffers=64MB \
       -c work_mem=2MB \
       -c maintenance_work_mem=16MB \
       -c effective_cache_size=128MB \
       -c checkpoint_timeout=10min \
       -c wal_buffers=512kB \
       -c track_counts=off
  redis:
    image: valkey/valkey:7
    host: sfbuff.site
    port: "127.0.0.1:6379:6379"
    directories:
      - data:/data
